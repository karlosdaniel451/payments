definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.Transaction:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      payee_id:
        type: integer
      payer_id:
        type: integer
      updatedAt:
        type: string
      value:
        type: number
    type: object
  model.User:
    properties:
      cnpj:
        type: string
      cpf:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email_address:
        type: string
      full_name:
        type: string
      id:
        type: integer
      payments_received:
        items:
          $ref: '#/definitions/model.Transaction'
        type: array
      payments_sent:
        items:
          $ref: '#/definitions/model.Transaction'
        type: array
      updatedAt:
        type: string
      user_type:
        $ref: '#/definitions/model.UserType'
    type: object
  model.UserType:
    enum:
    - COMMON
    - SHOP_KEEPER
    type: string
    x-enum-varnames:
    - Common
    - ShopKeeper
info:
  contact: {}
  description: Payments RESTful Web Service with Go, Fiber and GORM
  title: Payments
  version: 0.0.1
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Get all Users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Get all Users.
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new User.
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
      summary: Create a new User.
      tags:
      - Users
  /users/{id}:
    delete:
      description: Delete a User by its id.
      parameters:
      - description: Id of the User be deleted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      summary: Delete a User and, in case there is no User with the given ID,
      tags:
      - Users
    get:
      description: Get a User by its id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
      summary: Get a User by its id.
      tags:
      - Users
swagger: "2.0"
